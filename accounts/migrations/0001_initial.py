# Generated by Django 5.0.1 on 2024-01-07 12:20

import django.db.models.deletion
import django_extensions.db.fields
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
        ('organizations', '0006_alter_organization_slug'),
        ('phonecalls', '0002_alter_phonecall_id_alter_price_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OrganizationSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='organizations/')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('zip_code', models.CharField(blank=True, max_length=8, null=True, verbose_name='CEP')),
                ('street', models.CharField(blank=True, max_length=255, verbose_name='Rua')),
                ('street_number', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('neighborhood', models.CharField(blank=True, max_length=255, verbose_name='Bairro')),
                ('complement', models.CharField(blank=True, max_length=255, null=True, verbose_name='Complemento')),
                ('call_pricetable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='call_orgsettings_set', to='phonecalls.pricetable', verbose_name='Tabela de Valores Serviços de Comunicação')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.city', verbose_name='Cidade')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.country', verbose_name='País')),
                ('organization', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='organizations.organization', verbose_name='Organização')),
                ('service_pricetable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_orgsettings_set', to='phonecalls.pricetable', verbose_name='Tabela de Valores Serviços Básicos')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.region', verbose_name='Estado')),
            ],
            options={
                'verbose_name': 'Configuração da Organização',
                'verbose_name_plural': 'Configurações da Organização',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Telefone')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
    ]
